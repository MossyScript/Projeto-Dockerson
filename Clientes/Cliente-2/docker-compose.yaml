services:
  Proxy-Client2:
    image: nginx:latest
    container_name: nginx-proxy2 
    restart: unless-stopped
    depends_on:
      - client2-portal
      - client2-wordpress
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
    networks:
      - rede-Client2
      - proxy       
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.client2-portal-nginx-router.rule=Host(`portal.client2.dockerson.br`)" 
      - "traefik.http.routers.client2-portal-nginx-router.entrypoints=websecure"
      - "traefik.http.routers.client2-portal-nginx-router.tls=true" 
      
      - "traefik.http.routers.client2-wordpress-nginx-router.rule=Host(`wordpress.client2.dockerson.br`)" 
      - "traefik.http.routers.client2-wordpress-nginx-router.entrypoints=websecure"
      - "traefik.http.routers.client2-wordpress-nginx-router.tls=true" 
    
      - "traefik.http.services.client2-nginx-service.loadbalancer.server.port=80" 
 
 # Portal do Cliente 2
  client2-portal:
    image: nginx:latest
    container_name: client2-portal
    volumes:
      - ./Portal/index.html:/usr/share/nginx/html/index.html:ro
    networks:
      - rede-Client2

  # wordpress do Cliente 2
  client2-wordpress:
    image: wordpress
    restart: always
    container_name: client2-wordpress
    ports:
      - 8083:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
    volumes:
      - wordpress:/var/www/html
    networks:
      - rede-Client2

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - db:/var/lib/mysql
    networks:
      - rede-Client2

volumes:
  wordpress:
  db:

networks:
  rede-Client2:
    external: true
  proxy:
    external: true
