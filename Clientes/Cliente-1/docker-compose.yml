services:
  Proxy-Client1:
    image: nginx:latest
    container_name: nginx-proxy1 
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
    networks:
      - rede-Client1 
      - proxy       
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.client1-portal-nginx-router.rule=Host(`portal.client1.dockerson.br`)" 
      - "traefik.http.routers.client1-portal-nginx-router.entrypoints=websecure"
      - "traefik.http.routers.client1-portal-nginx-router.tls=true" 
      
      - "traefik.http.routers.client1-hotsite-nginx-router.rule=Host(`hotsite.client1.dockerson.br`)" 
      - "traefik.http.routers.client1-hotsite-nginx-router.entrypoints=websecure"
      - "traefik.http.routers.client1-hotsite-nginx-router.tls=true" 
      
      - "traefik.http.routers.client1-sign-nginx-router.rule=Host(`sign.client1.dockerson.br`)" 
      - "traefik.http.routers.client1-sign-nginx-router.entrypoints=websecure"
      - "traefik.http.routers.client1-sign-nginx-router.tls=true"

      - "traefik.http.services.client1-nginx-service.loadbalancer.server.port=80" 
 
 # Portal do Cliente 1
  client1-portal:
    image: nginx:latest
    container_name: client1-portal
    volumes:
      - ./Portal/index.html:/usr/share/nginx/html/index.html:ro
    networks:
      - rede-Client1

  # Hotsite do Cliente 1
  client1-hotsite:
    image: nginx:latest
    container_name: client1-hotsite
    volumes:
      - ./hotsite/index.html:/usr/share/nginx/html/index.html:ro
    networks:
      - rede-Client1

  ### Banco de Dados (PostgreSQL) ###
  db:
    image: postgres:15-alpine
    container_name: sign-db
    environment:
      POSTGRES_USER: ${DB_USER:-dbuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dbuserpass123}
      POSTGRES_DB: ${DB_NAME:-docsign_db}
    networks:
      - rede-Client1
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dbuser} -d ${DB_NAME:-docsign_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  ### Backend/API ###
  backend:
    image: salesfilho/sign-api:latest
    container_name: sign-api
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-dbuser}
      DB_PASSWORD: ${DB_PASSWORD:-dbuserpass123}
      DB_NAME: ${DB_NAME:-docsign_db}
    networks:
      - rede-Client1
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  ### Frontend / App ###
  frontend:
    image: salesfilho/sign-app:latest
    container_name: sign-app
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://localhost:8000/api}
    networks:
      - rede-Client1
    ports:
      - "${FRONTEND_PORT:-8081}:80"
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_data:

networks:
  rede-Client1:
    external: true
  proxy:
    external: true
